#Множества           | Sets

# Множество - это изменяемый неупорядоченный тип данных. 
# В множестве всегда содержатся только уникальные элементы.

# Множество в Python - это последовательность элементов, 
# которые разделены между собой запятой и заключены в фигурные скобки.

# С помощью множества можно легко убрать повторяющиеся элементы

list1 = [10, 20, 30, 40, 100, 10, 20, 20, 50, 100]

set1 = set(list1)

print(set1)

# Полезные методы для работы с множествами


### add()

# Метод add() добавляет элемент во множество

set2 = {1,2,3,4,5}

set2.add(20)

print(set2)


### discard()

# Метод discard() позволяет удалять элементы, 
# не выдавая ошибку, если элемента в множестве нет

set2.discard(25)

print(set2)

set2.discard(5)

print(set2)



### clear()

# Метод clear() очищает множество

set2.clear()

print(set2)


### Множества полезны тем, что с ними можно делать различные 
# операции и находить объединение множеств, пересечение и так далее.

# Объединение множеств можно получить с помощью метода union() или оператора |:

set3 = {5,6,7,8,9,0}

set4 = {1,2,3,4,5}

set_union = set3.union(set4)

# set_union = set3|set4  Данная запись по результату идентична предыдущей строке

print(set_union)

# Пересечение множеств можно получить с помощью метода intersection() или оператора &:

set3 = {5,6,7,8,9,0}

set4 = {1,2,3,4,5}

num1 = set3.intersection(set4)

# num1 = set3 & set4 Данная запись по результату идентична предыдущей строке

print(num1)


###Создание множеств
# Нельзя создать пустое множество с помощью литерала 
# (так как в таком случае это будет не множество, а словарь)
# Но пустое множество можно создать таким образом

set5 = set()

print(set5)

#Множество можно получить из строки: 

str1 = "some string with text here"

set6 = set(str1)

print(set6)

#Множество можно получить из списка

list2 = [1,2,3,4,5,6,7,8,9,0,1,24,3,5,6,43,46,7,245]

set7 = set(list2)

print(set7)